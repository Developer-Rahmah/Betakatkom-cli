// import * as React from 'react';
// import {View, Text} from 'react-native';
// import {NavigationContainer} from '@react-navigation/native';
// import {createNativeStackNavigator} from '@react-navigation/native-stack';
// import Home from './home';
// import EscPos from './escpos';
// import Tsc from './tsc';

// function HomeScreen() {
//   return (
//     <View style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>
//       <Text>Home Screen</Text>
//     </View>
//   );
// }

// const Stack = createNativeStackNavigator();

// function App() {
//   return (
//     <NavigationContainer>
//       <Stack.Navigator>
//         <Stack.Screen name="Home" component={Home} />
//         <Stack.Screen name="EscPos" component={EscPos} />
//         <Stack.Screen name="Tsc" component={Tsc} />
//       </Stack.Navigator>
//     </NavigationContainer>
//   );
// }

// export default App;

import {NavigationContainer} from '@react-navigation/native';
import React, {useEffect, useState} from 'react';
// import AppLoading from 'expo-app-loading';
import {Provider} from 'react-redux';
import store from './src/services/redux/store';
import LocalStorage from './src/services/helper/LocalStorage';
import {I18nManager} from 'react-native';
import {NativeBaseProvider} from 'native-base'; // import {View, Text} from 'react-native';
import {View, Text} from 'react-native';

// enable reactotron.
// require('./ReactotronConfig');

export default function App() {
  const [dataLoaded, setDataLoaded] = useState(false);
  const setDirection = async () => {
    const lang = await LocalStorage.get('lang');
    const userId = await LocalStorage.get('authToken');

    console.log('langlang', lang);
    if (lang === 'ar') {
      I18nManager.allowRTL(true);
      I18nManager.forceRTL(true);
    } else if (lang === 'en') {
      I18nManager.allowRTL(false);
      I18nManager.forceRTL(false);
    } else {
      I18nManager.allowRTL(true);
      I18nManager.forceRTL(true);
    }
  };
  console.disableYellowBox = true;
  useEffect(() => {
    setDirection();
  }, []);
  console.disableYellowBox = true;
  // if (!dataLoaded) {
  //   return (
  //     <AppLoading
  //       startAsync={fetchFonts}
  //       onFinish={() => setDataLoaded(true)}
  //       onError={console.warn}
  //     />
  //   );
  // }
  return (
    <Provider store={store}>
      <NativeBaseProvider>
        <NavigationContainer>
          {/* <AppNavigator /> */}
          <View style={{backgroundColor: 'red', width: 20, height: 40}} />
        </NavigationContainer>
      </NativeBaseProvider>
    </Provider>
  );
}
